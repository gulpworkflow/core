# =======
#
# 4) Task config
#
# ---
# These are project file tasks.  Workflow tasks are handled separately.
#
# This build system includes: (sorted alphabetically)
#     - browserSync : serve static files to browser, live reload, sync across devices
#     - favicon     : generates favicon/associated html based on raw png
#     - fonts       : pull together web font css into a partial and insert into sass project
#     - hypertext   : move html/php into build + dist
#     - jade        : compiles jade into html
#     - jspm_lib    : moves your project's js lib into appropriate build folder based on JSPM config
#     - iconFont    : takes a folder of SVGS and generates a font + sass partial then inserts into your sass project
#     - images      : minifies web images, stores both the original and minified versions
#     - nunjucks    : Creates html vis Nunjucks template engine (similar to Twig, also based on Ninja2)
#     - sass        : processes sass into project CSS (autoprefix, bulk import components, etc)
#     - svgSprite   : nothing (future candidate)
#     - twig        : create HTML from php-based Twig templates.  Useful for static front-end build for a PHP project
tasks:
  # =======
  #
  # BrowserSync for live-reloading
  #
  # =======
  browserSync:
    enable_task: true                                 # Turn this task on/off at will!
    # ---
    server:
      baseDir: "build"                                # Base directory of web files you wanted to serve in browser
      index: "index.html"                             # What is the index file?
    # ---
    watch_task:
      enable: false                                   # Should a watch task be created?
      src: null                                       # If so, what's the source (most likely same as task src)
  # =======
  #
  # Generate Favicons for any modern web app
  # (NOT DONE YET)
  #
  # =======
  favicon:
    enable_task: true                                 # Turn this task on/off at will!
    # ---
    src: "./src/favicon/favicon_raw@260x260.png"      # Path(s) for file to produce the favicons. Image should be min 260x260!!
    dest: "./src/favicon/output"                      # Path for writing the favicons to
    # ---
    clean: false                                       # favicons are built into img folder, so that task cleans out favicons
    # ---
    html: "./src/favicon/"                            # Path(s) for HTML file to write or append metadata
    iconsPath: "../build/img/favicons"                # Path for overriding default icons path
    # ---
    watch_task:
      enable: false                                   # Should a watch task be created?
      src: null                                       # If so, what's the source (most likely same as task src)
  # =======
  #
  # Takes web fonts and creates a scss partial for font-face
  #
  # =======
  fonts:
    enable_task: true                                # Turn this task on/off at will!
    # ---
    watch_task:
      enable: true
      src:
        - ./src/fonts/**/*.woff2
        - ./src/fonts/**/*.woff
        - ./src/fonts/**/*.eot
        - ./src/fonts/**/*.ttf
        - ./src/fonts/**/*.svg
        - ./src/fonts/**/*.css
    # ---
    clean:
      - './src/scss/00-base/_fonts.scss'
      - './build/fonts'
    # --
    stylesheets:
      src: './src/fonts/**/*.css'
      fontLocation: '../fonts'
      outputFile: '_fonts.scss'
      outputPath: './src/scss/00-base/'
    # ---
    fontFiles:
      src:
        - ./src/fonts/**/*.woff2
        - ./src/fonts/**/*.woff
        - ./src/fonts/**/*.eot
        - ./src/fonts/**/*.ttf
        - ./src/fonts/**/*.svg
      dest: "./build/fonts"
  # =======
  #
  # Jade
  #
  # =======
  jade:
    enable_task: false                               # Turn this task on/off at will!
    # ---
    src: "./src/jade/*.jade"                        # jade pulls these files when compiling html
    dest: "./src/html"                              # destination of compiled html
    # ---
    clean: false                                     # If you are compiling jade into html, leave clean as a "null",
    # ---                                           # nothing gets cleaned since there are no build files.
    data_folderName: "data"                         # name of folder where the data lives, relative to templates
    # ---
    watch_task:
      enable: true                                  # Should a watch task be created?
      src: "./src/jade/*.jade"                      # If so, what's the source (most likely same as task src)
  # =======
  #
  # Javascript is managed via JSPM
  # We have a task that moves your app's js to the build lib folder (a jspm config.js setting)
  #
  # =======
  jspm_bundle:
    enable_task: true                                 # Turn this task on/off at will!
    # ---
    packages:
      src:
        - "./build/js/jspm_packages/*.js"
        - "./build/js/jspm_packages/*.js.map"
      changed: "./build/js/jspm_packages"
    config: "./build/js/config.js"
    dest: './dist/js/bundle.js'
    # ---
    clean: false                                      # These are deleted & re-generated every time you run "gulp"
    # ---
    watch_task:
      enable: false                                    # Should a watch task be created?
  # =======
  #
  # Javascript is managed via JSPM
  # We have a task that moves your app's js to the build lib folder (a jspm config.js setting)
  #
  # =======
  jspm_lib:
    enable_task: true                                 # Turn this task on/off at will!
    # ---
    src: "./src/js/*.js"
    dest:
      build: "./build/js/lib"
      dist: "./dist/js"
    # ---
    clean: "./build/js/lib/*.js"                      # These are deleted & re-generated every time you run "gulp"
    # ---
    watch_task:
      enable: true                                    # Should a watch task be created?
      src: "./src/js/*.js"                            # If so, what's the source (most likely same as task src)
  # =======
  #
  # Generate Icon Font from SVGs
  #
  # =======
  iconFont:
    enable_task: true                                # Turn this task on/off at will!
    # ---
    src: "./src/icons/*.svg"                          # Path of the raw icons (as SVG)
    base: "./src"                                     # Set the base of "icons" folder. Without it, the template goes to weird places (cant leave src)
                                                        #
    fontDest: "build/fonts/icons"                     # This is where the icon-font gulp pipe spits the webfont files
    # ---
    clean:                                            # These are deleted & re-generated every time you run "gulp"
      - './build/fonts/icons'
      - './src/scss/00-base/_icons.scss'
    # ---
    sassOutput: "../../../src/scss/00-base/_icons.scss"  # The path where the (S)CSS file should be saved, relative to the font destination (fontDest)
    fontPath: "../fonts/icons"                           # Path of fonts, relative to CSS (not scss) (eg, this is where @font-face points)
    className: "icon"                                    # Basis of the icons' class in CSS
    template: "gulp/util/_iconFont-template.scss"     # The template path for generating the stylesheet (we use scss)
    # ---
    watch_task:
      enable: true                                    # Should a watch task be created?
      src: "./src/icons/*.svg"                            # If so, what's the source (most likely same as task src)
  # =======
  #
  # Optimize PNG, JPEG, GIF and SVG for web
  #
  # =======
  images:
    enable_task: true                                 # Turn this task on/off at will!
    # ---
    src: "./src/img/original/**"                       # Path where you will drop images
    dest:
      src: "./src/img/minified"                               # Path for images after minification (on change)
      build: "./build/img"
    #---
    clean: "./build/img"                           # These are deleted & re-generated every time you run "gulp"
    #---
    watch_task:
      enable: true                                    # Should a watch task be created?
      src: "./src/img/original/**"                    # If so, what's the source (most likely same as task src)
  # =======
  #
  # Nunjucks
  #
  # =======
  nunjucks:
    enable_task: false                               # Turn this task on/off at will!
    # ---
    src: "./src/nunjucks/*.html"                    # jade pulls these files when compiling html
    dest: "./src/html"                              # destination of compiled html
    # ---
    clean: "./src/html"                             # If you are compiling nunjucks into html, leave clean as a "null",
    # ---                                           # nothing gets cleaned since there are no build files.
    data_folderName: "data"                         # name of folder where the data lives, relative to templates
    # ---
    watch_task:
      enable: true                                    # Should a watch task be created?
      src: "./src/nunjucks/*.html"                            # If so, what's the source (most likely same as task src)
  # =======
  #
  # SASS/SCSS for stylesheets
  #
  # =======
  sass:
    enable_task: true                                 # Turn this task on/off at will!
    # ---
    src: "./src/scss/*.scss"                          # Source path(s) for the gulp-sass pipe
    dest: "./build/css"                               # Path to write compiled CSS
    # ---
    clean: "./build/css/"                             # Which file(s) should be deleted each time before gulp runs?
    # ---
    autoprefix_browsers: ['last 2 version', 'ie 9']   # Browser settings based on gulp-autoprefixer config
    settings:                                         # settings for gulp-sass
      indentedSyntax: false                           # Set to true if you want to use sass indented syntax
      errLogToConsole: errLogToConsole                #
    # ---
    watch_task:
      enable: true                                    # Should a watch task be created?
      src:
        - "./src/scss/*.scss"                        # If so, what's the source (most likely same as task src)
        - "./src/scss/**/*.scss"
   #
  # ==========================================================================================================================
  #
  # Watch Files
  # -----------
  # Define arbitrary file sets below that will be watched and moved into the build.  Optionally concatenate
  # Useful for bundling ES5 javascript, moving content, system-specific files for WordPress or Jeykll, HTML, etc
  # Helps keep your source files very need and organized
  #
  # NOTE: This is NOT the workflow "watch" task, it only defines arbitrary files that *should* be watched
  watchFiles:
    # -------------------------------------------------------------------------------------------------------------------------
    # PHP - WordPress (WP) templates
    # ---------
    php:
      enable_task: true                                 # Turn this task on/off at will!
      # ---
      concat: false
      # ---
      src: "./src/php"                          # Path for HTML
      dest: "./build/includes"                                   # Where should HTML go?
      #---
      clean: "./build/includes"                           # These are deleted & re-generated every time you run "gulp"
    # -------------------------------------------------------------------------------------------------------------------------
    # PHP - WordPress (WP) templates
    # ---------
    views:
      enable_task: true                                 # Turn this task on/off at will!
      # ---
      concat: false
      # ---
      src: "./src/twig"                          # Path for HTML
      dest: "./build/"                                   # Where should HTML go?
      #---
      clean: "./build/*.twig"                           # These are deleted & re-generated every time you run "gulp"
  # =======
  #
  # Create a sprite for speedy web use
  # (NOT DONE YET)
  #
  # =======
  svgSprite:
    enable_task: false                                # Turn this task on/off at will!
    # ---
    src: "sprites"
    dest: "img"
    # ---
    clean: false
    # ---
    extensions:
      - "svg"
    # ---
    watch_task:
      enable: true                                    # Should a watch task be created?
      src: "./src/icons/*.svg"                        # If so, what's the source (most likely same as task src)
  # =======
  #
  # Twig
  #
  # =======
  twig:
    enable_task: true                               # Turn this task on/off at will!
    # ---
    src: "./src/twig/*.twig"                        # twig pulls these files when compiling html
    dest: "./build/"                                # destination of compiled html
    # ---
    clean: false                                     # If you are compiling twig into html, leave clean as a "null",
    # ---                                           # nothing gets cleaned since there are no build files.
    data_folderName: "data"                         # name of folder where the data lives, relative to templates
    # ---
    watch_task:
      enable: true                                  # Should a watch task be created?
      src: "./src/twig/*.twig"                      # If so, what's the source (most likely same as task src)